'use client'

import { useState } from 'react'
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Slider } from "@/components/ui/slider"
import { Switch } from "@/components/ui/switch"
import { ArrowLeft, Sun, Moon, Laptop, PaletteIcon, Type, PanelTopClose, Play, Image } from 'lucide-react'

export default function Component() {
  const [theme, setTheme] = useState('dark')
  const [accentColor, setAccentColor] = useState('blue')
  const [textSize, setTextSize] = useState(50)
  const [brightness, setBrightness] = useState(80)

  const accentColors = ['blue', 'yellow', 'green', 'purple', 'pink']

  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button variant="outline">Open Preferences</Button>
      </DialogTrigger>
      <DialogContent className="sm:max-w-[425px] bg-zinc-900 text-zinc-100">
        <DialogHeader>
          <div className="flex justify-between items-center w-full">
            <Button variant="ghost" size="icon">
              <ArrowLeft className="h-4 w-4" />
            </Button>
            <DialogTitle className="text-xl font-semibold">Preferences</DialogTitle>
            <Button variant="ghost" size="sm" className="text-sm">
              Save
            </Button>
          </div>
        </DialogHeader>
        <div className="space-y-6 py-4">
          <div>
            <h3 className="flex items-center text-sm font-medium mb-4">
              <Sun className="mr-2 h-4 w-4" />
              Appearance
            </h3>
            <div className="grid grid-cols-3 gap-2">
              {['light', 'dark', 'auto'].map((mode) => (
                <Button
                  key={mode}
                  variant={theme === mode ? "secondary" : "outline"}
                  className="h-20 w-full"
                  onClick={() => setTheme(mode)}
                >
                  {mode === 'light' && <Sun className="h-4 w-4 mb-2" />}
                  {mode === 'dark' && <Moon className="h-4 w-4 mb-2" />}
                  {mode === 'auto' && <Laptop className="h-4 w-4 mb-2" />}
                  <span className="block">{mode.charAt(0).toUpperCase() + mode.slice(1)}</span>
                </Button>
              ))}
            </div>
          </div>

          <div>
            <h3 className="flex items-center text-sm font-medium mb-4">
              <PaletteIcon className="mr-2 h-4 w-4" />
              Accent color
            </h3>
            <div className="flex space-x-2">
              {accentColors.map((color) => (
                <Button
                  key={color}
                  variant="outline"
                  className={`w-8 h-8 rounded-full ${accentColor === color ? 'ring-2 ring-offset-2 ring-offset-zinc-900 ring-white' : ''}`}
                  style={{ backgroundColor: color }}
                  onClick={() => setAccentColor(color)}
                />
              ))}
            </div>
          </div>

          <div>
            <h3 className="flex items-center text-sm font-medium mb-4">
              <Type className="mr-2 h-4 w-4" />
              Text size
            </h3>
            <div className="flex items-center">
              <span className="mr-2 text-sm">A</span>
              <Slider
                value={[textSize]}
                onValueChange={(value) => setTextSize(value[0])}
                max={100}
                step={1}
                className="flex-1"
              />
              <span className="ml-2 text-base font-medium">A</span>
            </div>
          </div>

          <div>
            <h3 className="flex items-center text-sm font-medium mb-4">
              <Sun className="mr-2 h-4 w-4" />
              Brightness
            </h3>
            <div className="flex items-center bg-zinc-800 rounded-md p-2">
              <Slider
                value={[brightness]}
                onValueChange={(value) => setBrightness(value[0])}
                max={100}
                step={1}
                className="flex-1"
              />
              <span className="ml-2 text-sm font-medium">{brightness}%</span>
            </div>
          </div>

          <div className="space-y-4">
            {[
              { icon: <PanelTopClose className="h-4 w-4" />, label: 'Reduce motion' },
              { icon: <Play className="h-4 w-4" />, label: 'Auto play' },
              { icon: <Image className="h-4 w-4" />, label: 'High quality photo' },
            ].map(({ icon, label }) => (
              <div key={label} className="flex items-center justify-between">
                <div className="flex items-center">
                  {icon}
                  <span className="ml-2 text-sm">{label}</span>
                </div>
                <Switch />
              </div>
            ))}
          </div>
        </div>
      </DialogContent>
    </Dialog>
  )
}